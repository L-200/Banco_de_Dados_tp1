services:
  # serviço do banco de dados
  db:
    #imagem do postgres
    image: postgres:15-alpine
    container_name: tp1_db

    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce

    #volume para persistência dos dados
    volumes:
      - postgres_data:/var/lib/postgresql/data

    ports:
      - "5432:5432"

    networks: #network para comunicação entre os containers
      - app-network

    #healthcheck para verificar se o banco está pronto para aceitar conexões
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ecommerce"]
      interval: 10s
      timeout: 5s
      retries: 5

    restart: unless-stopped

  # SERVIÇO DA APLICAÇÃO PYTHON
  app:
    build: .
    container_name: tp1_python_app

    #app só inicia após o banco estar saudável
    depends_on:
      db:
        condition: service_healthy

    environment:
      - PYTHONPATH=/app

    volumes:
      - ./data:/data:ro #permissão de leitura do data do diretorio host para o container atraves de um "atalho"
      - ./out:/app/out         # saída dos relatórios/CSVs
    
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: